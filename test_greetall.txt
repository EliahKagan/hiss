Doctests for the greetall.py script
===================================

>>> import os
>>> import pathlib
>>> import subprocess

>>> def attempt(shell_command):
...     proc = subprocess.run(shell_command, capture_output=True, shell=True)
...     if proc.stdout:
...         print('STDOUT:', proc.stdout.decode('utf-8'), sep='\n', end='')
...     if proc.stderr:
...         print('STDERR:', proc.stderr.decode('utf-8'), sep='\n', end='')
...     return proc.returncode

With no arguments, it reads from stdin and writes to stdout:

>>> attempt('./greetall.py <names.txt')
STDOUT:
Hello, Bob Alistair!
Hello, Alice Bobson!
Hello, Eve "Eavesdropper" Ives!
0

With one argument, it reads from the named file and writes to stdout:

>>> attempt('./greetall.py names.txt')
STDOUT:
Hello, Bob Alistair!
Hello, Alice Bobson!
Hello, Eve "Eavesdropper" Ives!
0

With two arguments, it reads from the first file and writes to the second:

>>> path = pathlib.Path('greetings.txt')
>>> path.exists()
False
>>> attempt('./greetall.py names.txt greetings.txt')
0
>>> print(path.read_text(), end='')
Hello, Bob Alistair!
Hello, Alice Bobson!
Hello, Eve "Eavesdropper" Ives!
>>> os.remove(path)

With more arguments, it fails with an error:

>>> attempt('./greetall.py names.txt greetings.txt extra.txt')  # doctest: +ELLIPSIS
STDERR:
...greetall.py: error: too many arguments
2

With a nonexistent input file, it fails with an error:

>>> attempt('./greetall.py nonexistent.txt')  # doctest: +ELLIPSIS
STDERR:
...greetall.py: error: [Errno 2] No such file or directory: 'nonexistent.txt'
1
